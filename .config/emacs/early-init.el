;;; early-init.el --- early configurations -*- lexical-binding: t; buffer-read-only: t; no-byte-compile: t -*-
;;;
;;; Commentary:
;;; Emacs confi by Andrey Orst.
;;; This file was automatically generated by `org-babel-tangle'.
;;; Do not change this file.  Main config is located in README.org at `user-emacs-directory'
;;;
;;; Code:

(defvar aorst--gc-cons-threshold gc-cons-threshold)
(defvar aorst--gc-cons-percentage gc-cons-percentage)
(defvar aorst--file-name-handler-alist file-name-handler-alist)

(setq-default gc-cons-threshold 402653184
              gc-cons-percentage 0.6
              inhibit-compacting-font-caches t
              message-log-max 16384
              file-name-handler-alist nil)

(add-hook 'after-init-hook
          (lambda ()
            (setq gc-cons-threshold aorst--gc-cons-threshold
                  gc-cons-percentage aorst--gc-cons-percentage
                  file-name-handler-alist aorst--file-name-handler-alist)))

(defvar comp-deferred-compilation)
(setq comp-deferred-compilation t)

(setq initial-frame-alist '((width . 170)
                            (height . 56)
                            (tool-bar-lines . 0)
                            (bottom-divider-width . 0)
                            (right-divider-width . 1))
      default-frame-alist initial-frame-alist)

(setq frame-inhibit-implied-resize t
      x-gtk-resize-child-frames 'resize-mode)

(defvar straight-process-buffer)
(setq-default straight-process-buffer " *straight-process*")
(defvar bootstrap-version)
(defvar straight-repository-branch)
(setq straight-repository-branch "develop")
(let ((bootstrap-file
       (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
      (bootstrap-version 5))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
        (url-retrieve-synchronously
         "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el"
         'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))

(straight-use-package 'use-package)
(defvar straight-use-package-by-default)
(setq straight-use-package-by-default t)

(setq package-enable-at-startup nil)

(provide 'early-init)
;;; early-init.el ends here
